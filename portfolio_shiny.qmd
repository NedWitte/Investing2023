---
title: "Quarto + Shiny"
format: 
  html:
    page-layout: custom
server: shiny
echo: false
---

#### Inputs

```{r}
#| echo: false
#| output: false
#| include: false
#install.packages("pak")
#install.packages("shiny")
#install.packages("shiny.i18n")
#install.packages("Rtools")
#pak::pak("posit-dev/r-shinylive")
library(pak)
library(shiny)
library(shinydashboard)
library(shiny.i18n)
library(dplyr)
library(shiny)
library(ggplot2)
library(viridis)
library(readxl)


```

```{r}
#| context: data
#| echo: false
#| output: false
#get dividends
#get data from the Excel sheet in Github
portfolio_df <- read_excel("data/NedPortfolio_Management.xlsx")
portfolio_df <- portfolio_df%>% filter(!is.na(value))

portfolio_df_1 <- portfolio_df %>% filter(`pie_%` >0.01)
portfolio_df_1 <- portfolio_df_1 %>% arrange(desc(`pie_%`))

sum_main_portfolio <- sum(portfolio_df_1$`pie_%`)
sum_main_portfolio_label <- paste0("Total: ", round(100*sum_main_portfolio, 1), "%")

```

```{r}
#| context: server
# Define a server for the Shiny app
# Define UI
ui <- fluidPage(
  titlePanel("Reactive Pie Chart"),
  sidebarLayout(
    sidebarPanel(
      # Add any inputs you need here
    ),
    mainPanel(
      plotOutput("pieChart")
    )
  )
)

# Define server logic
server <- function(input, output) {
  output$pieChart <- renderPlot({
    ggplot(portfolio_df_1, aes(x = "", y = `pie_%`, fill = reorder(asset, -`pie_%`))) +
      geom_col(color = "black") +
      geom_label(aes(label = asset), color = "white",
                 position = position_stack(vjust = 0.5),
                 box.padding = 3,
                 point.padding = 5,
                 show.legend = FALSE,
                 size = 2) + 
      scale_fill_viridis_d() +
      coord_polar(theta = "y") + 
      theme_void() +
      theme(legend.position = "none") +
      ggtitle(sum_main_portfolio_label)
  })
}

# Run the application
shinyApp(ui = ui, server = server)
```
