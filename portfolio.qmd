---
title: "My personal portfolio"
author: "JNW"
description: "The visualization of the KarambolageNedInvest portfolio"
date: "2023-08-10"
---

**The KarambolageNed portfolio**

# Introduction

This **portfolio** consist of a maximum of 100 values whereas the top 15 stock should compromise at least 40% of the total value.

```{r}
#| echo: false
#| output: false
#| include: false

rm(list = ls())

#load packages
library(tidyquant)
library(quantmod)
library(ggplot2)
library(tidyverse)
library(tidyquant)
library(plotly)
library(readxl)
library(gt)
library(reshape)
```

```{r}
#| warning: false
#| echo: false
#| output: false
#| include: false

#get dividends
#get data from the Google sheets 
portfolio_df <- read_excel("data/2023_08_NedPortfolio.xlsx")
portfolio_df <- portfolio_df%>% filter(!is.na(Kaufkurs))
portfolio_df$real_time_price_EUR <- NA
portfolio_df$real_time_worth_EUR <- NA
portfolio_df$Wertunterschied <- NA
portfolio_df$real_time_price_local_currency <- NA

#get transition course 
# Define the currency pair
start_date <- Sys.Date() - 1  # Get data for yesterday
end_date <- Sys.Date()

# Retrieve the exchange rate data
getFX("EUR/USD", from = start_date, to = end_date)
exchange_rate_data_today_EUR_USD <- as.vector(EURUSD$EUR.USD[1]) #EUR/USD
getFX("EUR/CHF", from = start_date, to = end_date)
exchange_rate_data_today_EUR_CHF <- as.vector(EURCHF$EUR.CHF[1]) #EUR/CHF
getFX("EUR/GBP", from = start_date, to = end_date)
exchange_rate_data_today_EUR_GBP <- as.vector(EURGBP$EUR.GBP[1]) #EUR/GBp
getFX("EUR/AUD", from = start_date, to = end_date)
exchange_rate_data_today_EUR_AUD <- as.vector(EURAUD$EUR.AUD[1]) #EUR/AUD
getFX("EUR/CNY", from = start_date, to = end_date)
exchange_rate_data_today_EUR_CNY <- as.vector(EURCNY$EUR.CNY[1]) #EUR/CNY
getFX("EUR/HKD", from = start_date, to = end_date)
exchange_rate_data_today_EUR_HKD <- as.vector(EURHKD$EUR.HKD[1]) #EUR/HKD
getFX("EUR/SGD", from = start_date, to = end_date)
exchange_rate_data_today_EUR_SGD <- as.vector(EURSGD$EUR.SGD[1]) #EUR/SGD
getFX("EUR/NOK", from = start_date, to = end_date)
exchange_rate_data_today_EUR_NOK <- as.vector(EURNOK$EUR.NOK[1]) #EUR/NOK


```

```{r}
#| echo: false
#| output: false
#| include: false

#
#pie_chart <- plot_ly(
  #data = portfolio_df,
  #labels = ~ifelse(`%-Anteil` > 1, Wertpapier, ""),
  #values = ~`%-Anteil`,
  #type = "pie",
  #marker = list(line = list(width = 0), textposition = "outside"))  # Adjust textposition to "outside"
  #%>% layout(
  #title = "Portfolio Distribution",
  #showlegend = FALSE)  # This removes the legend



```
